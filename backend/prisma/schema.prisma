// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id 			Int @id @default(autoincrement())
	createdAt 	DateTime @default(now())
	updateAt 	DateTime @updatedAt

	name		String @unique // 42 login
	hash 		String

	tokenAuth 	String // peut etre optionnel si attribution apres creation
	pseudo 		String? @unique
	//friends 	User[]
	//channels 	Channel[] @relation("channel_member")
	channelsOwn	Channel[] @relation("channel_owner")
	//channelsAdm	Channel[] @relation("channel_admins")
	//channelBan
	//channelInvit
	//channelMute
	status 		String
	//history	Game[]
	nb_win		Int @default(0)
	nb_loose	Int @default(0) 
	nb_game		Int @default(0)
	total_point	Int @default(0)
	level		Int @default(0)
	rank		Int @default(0)
	//avatar		String //Voir methode stockage ? photo ou url ?
	twoFA			Boolean  @default(false)
	//notifs		String []
	messages	Message[]
}

model	Channel {
	id 			Int @id @default(autoincrement())
	createdAt 	DateTime @default(now())
	updateAt 	DateTime @updatedAt

	name		String	@unique
	hash		String?
	private		Boolean @default(false)
	
	owner		User @relation(name: "channel_owner", fields: [ownerId], references: [id])
	ownerId		Int

	//admins	User[] @relation(name: "channel_admins", fields: [adminsIds], references: [id])
	//adminsIds	Int[]
	//members	User[] @relation(name: "channel_member", fields: [membersIds]
	//membersIds Int[]
	//invite	User[] @relation(name: "channel_invite", fields: [inviteIds]
	//inviteIds Int[]
	//banned	User[] @relation(name: "channel_banned", fields: [bannedIds]
	//bannedIds Int[]
	//mute	User[] @relation(name: "channel_mute", fields: [muteIds]
	//muteIds Int[]
	messages	Message[] 
}

model	Message {
	id 			Int @id @default(autoincrement())
	sendAt		DateTime @default(now())
	sendBy		User	@relation(fields: [sendById], references: [id])
	sendById	Int
	channel		Channel @relation(fields: [channelId], references: [id])
	channelId	Int
	content		String
}

model	Game {
	id 			Int @id @default(autoincrement())
	createdAt 	DateTime @default(now())
	endAt 		DateTime?

	live		Boolean
	//creator		User
	//guest			User
	winnerId	Int?
	looserId	Int?
	scoreCreator Int @default(0)
	scoreGuest	Int	@default(0)
	//socket ? 
	//theme		String ou Url ? (same avatar)
	difficulty	Int @default(1)
	matchmaking	Boolean
}

// Use "npx prisma generate" = create TSClass from Schema for our code.
// => import { User } from '@prisma/client';
